breedthreads	= auto
evalthreads	= auto
seed.0		= time

state		= ec.simple.SimpleEvolutionState

pop		= ec.Population
init		= ec.simple.SimpleInitializer
finish		= ec.simple.SimpleFinisher
breed		= ec.simple.SimpleBreeder
eval		= ec.simple.SimpleEvaluator
stat		= ec.simple.SimpleStatistics
exch		= ec.simple.SimpleExchanger

jobs = 1

generations		= 100
quit-on-run-complete	= true
checkpoint		= false
checkpoint-prefix	= ec
checkpoint-modulo	= 1

stat.file		= $full
stat.num-children = 1
stat.child.0 = ec.simple.SimpleShortStatistics
stat.child.0.file = $stat

#stat.do-message=false
stat.do-generation = false

pop.subpops		= 1
pop.subpop.0		= ec.Subpopulation
pop.subpop.0.size 		= 12
pop.subpop.0.duplicate-retries 	= 0
#
#
pop.subpop.0.species 		= ec.vector.FloatVectorSpecies
pop.subpop.0.species.fitness 	= ec.simple.SimpleFitness
pop.subpop.0.species.ind	= ec.vector.FloatVectorIndividual
pop.subpop.0.species.crossover-type	= one
base.likelihood = 0.5

pop.subpop.0.species.genome-size	= 0
pop.subpop.0.species.min-gene = 0
pop.subpop.0.species.max-gene = 10
pop.subpop.0.species.mutation-type = gauss
pop.subpop.0.species.mutation-stdev = 1.0					
pop.subpop.0.species.mutation-prob = 0.1					
pop.subpop.0.species.out-of-bounds-retries = 0
pop.subpop.0.species.mutation-bounded = false

select.tournament.size		= 2
pop.subpop.0.species.pipe			= ec.vector.breed.VectorMutationPipeline
pop.subpop.0.species.pipe.source.0		= ec.vector.breed.VectorCrossoverPipeline
pop.subpop.0.species.pipe.source.0.source.0	= ec.select.TournamentSelection
pop.subpop.0.species.pipe.source.0.source.1	= ec.select.TournamentSelection
#
#
eval.problem		= training.ECProblem
